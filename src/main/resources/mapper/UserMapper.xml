<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bysj.booksystem.dao.UserMapper">
    <resultMap id="user" type="com.bysj.booksystem.model.User">
        <id column="user_id" property="user_id"></id>
        <result column="password" property="password"></result>
        <result column="user_name" property="user_name"></result>
        <result column="phone" property="phone"></result>
        <result column="gender" property="gender"></result>
        <result column="email" property="email"></result>
        <result column="register_time" property="register_time"></result>
        <result column="role" property="role"></result>
    </resultMap>

<!--    登录-->
    <select id="selectUser" resultMap="user">
        select * from user where phone=#{phone}
    </select>

    <!--注册-->
    <insert id="insertUser">
        insert into user (phone,password,user_name,gender,email,register_time,role) values
         (#{user.phone},#{user.password},#{user.user_name},#{user.gender},#{user.email},#{user.register_time},#{user.role})
    </insert>

    <select id="selectAllUserByRole" resultMap="user">

        select * from (select * from user where role='admin' or role = 'reader') t limit #{index},#{limit}

<!--        <if test="role == 'admin'">-->
<!--            role = 'reader'-->
<!--        </if>-->
<!--        <if test="role == 'sup_admin'">-->
<!--            role='admin' or role = 'reader'-->
<!--        </if>-->
    </select>

    <select id="selectUserById" resultMap="user">
        select * from user where user_id =#{id}
    </select>


    <update id="updateRole">
        update user set
        <if test="role == 'reader'">
            role = 'admin'
        </if>
        <if test="role == 'admin'">
            role = 'reader'
        </if>
        where user_id = #{id}
    </update>

    <select id="selectUserByPhone" resultMap="user">
        select * from
        (SELECT * FROM user WHERE
        <if test="phone != null">
            phone like concat('%',#{phone},'%') and
        </if>
        role in ('reader','admin')) t limit #{index},#{limit}
    </select>

    <select id="selectPhone" resultMap="user">
         SELECT * FROM user WHERE phone = #{phone}
    </select>

    <select id="queryUser" resultMap="user">
        select * from user
        <if test=" phone != null">
            where phone like concat('%',#{phone},'%')
        </if>
    </select>

    <select id="selectUsersByCondition" resultMap="user">
        <if test="index != null and limit != null">
            select * from (
        </if>
            select * from user where 1=1
                <if test="userIds != null and userIds.size > 0">
                    and user_id in
                    <foreach collection="userIds" item="user_id" open="(" separator="," close=")">
                        #{user_id}
                    </foreach>
                </if>

                <if test="gender != null and gender !=''">
                  and gender = #{gender}
                </if>
                <if test="condition == 'sup_admin'">
                  and  role = 'sup_admin'
                </if>
                <if test="condition == 'admin'">
                  and role = 'admin'
                </if>
                <if test="condition == 'reader'">
                  and  role = 'reader'
                </if>
            <if test="index != null and limit != null">
            ) t limit #{index},#{limit}
            </if>
    </select>

    <select id="selectUserByIdList" resultMap="user">
        select * from user where user_id in
        <foreach collection="list" item="user_id" open="(" separator="," close=")">
            #{user_id}
        </foreach>
    </select>

    <select id="updateUserInfo">
        update user set user_name = #{user.user_name} ,gender = #{user.gender},email = #{user.email} where user_id = #{user.user_id}
    </select>

    <update id="updatePassword">
        update user set password = #{newPass} where user_id =#{user_id}
    </update>

    <select id="getCount" resultType="Integer">
        select count(*) from user where role in ('reader','admin')
        <if test="phone != null and phone != ''">
          and  phone like concat('%',#{phone},'%')
        </if>
    </select>

    <select id="getMaleCount" resultType="Integer">
        select count(*) from user where gender = 'male'
    </select>

    <select id="getFemaleCount" resultType="Integer">
        select count(*) from user where gender = 'female'
    </select>
</mapper>